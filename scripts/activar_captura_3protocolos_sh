#!/bin/bash

# --- Configuración ---
INFRA_DIR="/home/evelym/Lab/VelyFirewall/infra"
LOGS_DIR="/home/evelym/Lab/VelyFirewall/logs"
SCRIPTS_DIR="/home/evelym/Lab/VelyFirewall/scripts"
KAFKA_CONTAINER="infra-kafka-1"
KAFKA_TOPIC="raw_logs"
INTERFAZ="eno2"

PROCESAR_SIP_SCRIPT="$INFRA_DIR/procesar_logs_suricata.py"
PCAP_TO_CSV_SCRIPT="pcap_to_csv.py"
CAPTURAR_DIA_SS7_SCRIPT="$SCRIPTS_DIR/capturar_trafico.sh"
ENVIAR_CSV_KAFKA_SCRIPT="enviar_csv_kafka1.sh"

# --- 1. Activar Docker Compose ---
echo "Iniciando Docker Compose..."
cd "$INFRA_DIR" || exit 1
docker compose up -d
echo "Docker Compose iniciado."

# --- 2. Menú de Captura ---
echo "¿Qué tipo de tráfico deseas capturar?"
select PROTOCOLO in "Diameter" "SS7" "SIP" "Salir"; do
    case $PROTOCOLO in
        Diameter|SS7)
            # Captura tradicional
            echo "Ejecutando captura para $PROTOCOLO..."
            "$CAPTURAR_DIA_SS7_SCRIPT" "$PROTOCOLO"
            
            # --- 3. Convertir PCAP a CSV y mover el PCAP ---
            echo "Convirtiendo PCAP a CSV y moviendo el archivo PCAP..."
            python3 "$SCRIPTS_DIR"/"$PCAP_TO_CSV_SCRIPT"
            echo "Conversión a CSV y movimiento de PCAP completado."
            
            # --- 4. Enviar CSV a Kafka ---
            echo "Enviando CSV a Kafka..."
            "$SCRIPTS_DIR"/"$ENVIAR_CSV_KAFKA_SCRIPT"
            echo "Envío a Kafka iniciado (el script se ejecuta en bucle)."
            
            echo "Proceso de firewall automatizado completado. El script de envío a Kafka se está ejecutando en segundo
            plano."
            
            break
            ;;
            
        SIP)
            # Captura SIP
            echo "¿Cuántos segundos deseas capturar tráfico SIP?"
            read -p "Duración (en segundos): " DURACION
            if ! [[ "$DURACION" =~ ^[0-9]+$ ]]; then
                echo "Duración no válida. Usa solo números."
                exit 1
            fi

            echo "Capturando tráfico SIP..."
            docker exec -d infra-suricata-1 timeout "$DURACION" suricata -i "$INTERFAZ" -c /etc/suricata/suricata.yaml -v
            sleep "$((DURACION + 5))"

            echo "Procesando logs SIP..."
            python3 "$PROCESAR_SIP_SCRIPT"
            echo "✅ Proceso SIP completado."
            break
            ;;
            
        Salir)
            echo "Saliendo..."
            exit 0
            ;;
            
        *)
            echo "Opción inválida. Intenta de nuevo."
            ;;
    esac
done
